# Example Docker Compose for MCPhub with Vibetest DXT
# Copy this to docker-compose.yml and set your GOOGLE_API_KEY in .env file

version: '3.8'

services:
  mcphub:
    image: mcphub/mcphub:latest
    ports:
      - "8080:8080"
    environment:
      # Vibetest Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ANONYMIZED_TELEMETRY=false
      - BROWSER_USE_LOGGING_LEVEL=CRITICAL
      
      # MCPhub Configuration
      - NODE_ENV=production
      - PORT=8080
      
    volumes:
      # Mount extensions directory for DXT files
      - ./extensions:/app/extensions
      - ./data:/app/data
      - ./logs:/app/logs
      
    restart: unless-stopped
    
    # Resource limits for browser testing
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Optional: Add a reverse proxy for HTTPS
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcphub
    restart: unless-stopped

# Create these directories first:
# mkdir -p extensions data logs ssl
